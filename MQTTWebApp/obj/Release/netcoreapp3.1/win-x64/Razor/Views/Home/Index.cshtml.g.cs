#pragma checksum "E:\Download\MQTTManager\MQTTWebApp\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "70d0e2fed4c1b0ec77f64497b4f8d13cd715555b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Download\MQTTManager\MQTTWebApp\Views\_ViewImports.cshtml"
using MQTTWebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Download\MQTTManager\MQTTWebApp\Views\_ViewImports.cshtml"
using MQTTWebApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"70d0e2fed4c1b0ec77f64497b4f8d13cd715555b", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"14b89f13efb73e62b556075767f46ec67efd2a8c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "E:\Download\MQTTManager\MQTTWebApp\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("Links", async() => {
                WriteLiteral("\r\n    <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css\" />\r\n");
            }
            );
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70d0e2fed4c1b0ec77f64497b4f8d13cd715555b3561", async() => {
                WriteLiteral(@"
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <style>
        .wrapper {
            display: grid;
            grid-template-columns: repeat(6, 1fr);
            grid-auto-rows: 120px;
        }

        .box1 {
            grid-column-start: 1;
            grid-column-end: 2;
            grid-row-start: 1;
            grid-row-end: 1;
            background-color: #e6e6e6;
        }

        .box2 {
            grid-column-start: 2;
            grid-column-end: 3;
            grid-row-start: 1;
            grid-row-end: 1;
            font-size: 120%;
            background-color: #e6e6e6;
        }

        .box3 {
            grid-column-start: 3;
            grid-column-end: 5;
            grid-row-start: 1;
            grid-row-end: 1;
            font-size: 120%;
            background-color: #e6e6e6;
        } 
        .box4 {
            grid-column-start: 9;
            grid-column-end: 12;
            grid-row-start: 1;
        }");
                WriteLiteral(@"
        /* Create two equal columns that floats next to each other 
        .column {
            float: left;
            width: 20%;
            padding: 20px;
            height: 130px; /* Should be removed. Only for demonstration  
          }
         
        .column2 {
            float: left;
            width: 20%;
            padding: 10px;
            height: 130px; /* Should be removed. Only for demonstration  
        
        } 
        .column3 {
            float: left;
            width: 25%;
            padding: 10px;
            height: 130px; /* Should be removed. Only for demonstration 
        }
        */
 
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n \r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70d0e2fed4c1b0ec77f64497b4f8d13cd715555b6270", async() => {
                WriteLiteral("\r\n    <div class=\"wrapper\">\r\n        <div class=\"box1\">\r\n            <img");
                BeginWriteAttribute("src", " src=\"", 1968, "\"", 1974, 0);
                EndWriteAttribute();
                BeginWriteAttribute("alt", " alt=\"", 1975, "\"", 1981, 0);
                EndWriteAttribute();
                BeginWriteAttribute("srcset", " srcset=\"", 1982, "\"", 1991, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""weather-icon"">
        </div>
        <div class=""box2"">
            <div id=""location"">Loading Location</div>
            <div class=""desc"">Unable to Fetch Information</div>
            <div class=""weather"">
                <div class=""c"">Updating</div>
                <div class=""circle""></div>
                <!--div class=""f"">Updating</div>-->
            </div>
        </div>
        <div class=""box3"">
            <div class=""info"">
                <div class=""sunrise"">Updating</div>
                <div class=""sunset"">Updating</div>
            </div>
        </div>
    </div>
    <br />
    <br />

    <img src=""https://www.tetratech.com/en/images/latrobe-institute-is19-028-960.jpg?blobheader=image/jpeg"" alt=""Logo image"" width=""1000"" height=""600"" vertical-align: text-center>
    <br />
    <br />   <br />
 
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>

        function getCookie(cookieName) {
            let cookie = {};
            document.cookie.split(';').forEach(function (el) {
                let [key, value] = el.split('=');
                cookie[key.trim()] = value;
            })
            return cookie[cookieName];
        }

        const user = getCookie('user')
        if (user === null || user === '' || user === undefined) {
            location.href = ""/Login"";
        }

        const api = 'e3ecc09b04d573d27ba717db51146c8e'; //Replace with your API
        const iconImg = document.getElementById('weather-icon');
        const loc = document.querySelector('#location');
        const tempC = document.querySelector('.c');
        const tempF = document.querySelector('.f');
        const desc = document.querySelector('.desc');
        const sunriseDOM = document.querySelector('.sunrise');
        const sunsetDOM = document.querySelector('.sunset');
        window.addEventListener('load', () => {
     ");
                WriteLiteral(@"       let long;
            let lat;
            // Accesing Geolocation of User
            lat = -37.720596581264225;
            long = 145.04800102816586;
            const base = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${api}&units=metric`;

            // Using fetch to get data
            fetch(base)
                .then((response) => {
                    return response.json();
                })
                .then((data) => {
                    const { temp, feels_like } = data.main;
                    const place = data.name;
                    const { description, icon } = data.weather[0];
                    const { sunrise, sunset } = data.sys;

                    const iconUrl = `http://openweathermap.org/img/wn/${icon}");
                WriteLiteral(@"@2x.png`;
                    const fahrenheit = (temp * 9) / 5 + 32;

                    // Converting Epoch(Unix) time to GMT
                    const sunriseGMT = new Date(sunrise * 1000);
                    const sunsetGMT = new Date(sunset * 1000);

                    // Interacting with DOM to show data
                    iconImg.src = iconUrl;
                    loc.textContent = `${place}`;
                    desc.textContent = `${description}`;
                    tempC.textContent = `${temp.toFixed(2)} °C /  ${fahrenheit.toFixed(2)} °F` ;
                   // tempF.textContent = `${fahrenheit.toFixed(2)} °F`;
                    sunriseDOM.textContent = `Sunrise: ${sunriseGMT.toLocaleDateString()}, ${sunriseGMT.toLocaleTimeString()}`;
                    sunsetDOM.textContent = `Sunset: ${sunsetGMT.toLocaleDateString()}, ${sunsetGMT.toLocaleTimeString()}`;
                });

        });
    </script>
");
            }
            );
            WriteLiteral("\r\n\r\n");
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
